# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout
      uses: actions/checkout@v2.4.0
      with:
        # Repository name with owner. For example, actions/checkout
        repository: ${{ github.AzAvd }}
        path: ''
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.3.1
      with:
        # Artifact name
        name: azModule
        path: AzAvd
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.1.0
        with:
          name: azModule
      - name: Display structure of downloaded files
        run: ls -R
      - name: Install PSScriptAnalyzer module
        shell: pwsh
        run: |
          Set-PSRepository PSGallery -InstallationPolicy Trusted
          Install-Module PSScriptAnalyzer -ErrorAction Stop
      - name: Lint with PSScriptAnalyzer
        shell: pwsh
        run: |
          Invoke-ScriptAnalyzer -Path ./Public/*.ps1 -Recurse -Outvariable issues
              $errors   = $issues.Where({$_.Severity -eq 'Error'})
              $warnings = $issues.Where({$_.Severity -eq 'Warning'})
              if ($errors) {
                  Write-Error "There were $($errors.Count) errors and $($warnings.Count) warnings total." -ErrorAction Stop
              } else {
                  Write-Output "There were $($errors.Count) errors and $($warnings.Count) warnings total."
              }
      - name: Install Pester module
        shell: pwsh
        run: |
          Set-PSRepository PSGallery -InstallationPolicy Trusted
          Install-Module Pester -ErrorAction Stop
      - name: Check with Pester
        shell: pwsh
        run: |
          Invoke-ScriptAnalyzer -Path ./Az.Avd.Tests.ps1
